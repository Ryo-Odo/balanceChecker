追加要件
OK ・耐容上限を改めて確認する、１７歳以下は上限がなかったりするのでそれを確認、基準もない栄養素もある
OK ・各食品の単位を設定する
OK ・耐容上限を表示する、ある栄養素と無い栄養素がある
OK ・「基準値」などのテキストがいらない？https://calorie.slism.jp/total/
OK ・栄養素別バー表示
OK　・栄養素別検索のグループ分け及びスクロール化
OK　・栄養素別検索の水分４０パーセント切り替えラジオボタン
・発表資料作成、できるところから
・栄養素別検索の待ち時間が長い、検索自体ではなく描画に時間がかかっている。18種類別のページネーション作成
・食品別詳細モーダルウィンドウ（バックエンドも必要）、追加した食品リストだけならもうデータがあるので簡単かも
・PFCバラン・5台栄養素のレーダーチャート作成

・色で何の数字か判断できるようにする？「基準上限」「耐容上限」も色で表現すると場所を節約できる
・食品に対応した各ボタンの位置調整、横にする？
・モーダルウィンドウ表示場所変更？大きさは大きくして、籠か何かに追加するアニメーションを実装する？
　栄養素別検索を横２列にする場合大きいほうがいいかも
・食品のグループ別アイコン
・追加した食品リスト・栄養素表示部分のスクロール化
・読み込みアニメーション
・追加するときのアニメーション
・変数変更による数値の変化アニメーション
・おすすめ食材ボタン及び実装
・入力欄にマイナスや巨大な数字を許容している、修正できればする
・画面デザイン、縦及び横スクロールを行わないですべて表示する
・お気に入り機能実装
・バーの色説明があったほうがいいかも
・ダークモード（そんな余裕あったら）










-- DB に移動 (文字コードによって"\"が半角バックスラッシュ"＼"になる場合があります)
\c postgres;
-- 一旦削除
DROP TABLE IF EXISTS users;
-- users テーブルの作成
CREATE TABLE users (
  id SERIAL,
  login_id VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  name VARCHAR(255),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id)
);
-- dummy_data 準備
INSERT INTO users (login_id, password, name) VALUES ('user01', '11111111', '佐藤');
INSERT INTO users (login_id, password, name) VALUES ('user02', '22222222', '田中');
INSERT INTO users (login_id, password, name) VALUES ('user03', '33333333', '鈴木');
INSERT INTO users (login_id, password, name) VALUES ('user04', '44444444', '矢野');
INSERT INTO users (login_id, password, name) VALUES ('user05', '55555555', '松井');
-- 確認
SELECT * FROM users;


CREATE DATABASE foods_db ENCODING 'UTF8' TEMPLATE template0;

CREATE TABLE foods (
id SERIAL,
food_group INTEGER, 
food_name VARCHAR(255) NOT NULL,
energy DECIMAL,
moisture DECIMAL,
protein DECIMAL,
lipid DECIMAL,
food_fiber DECIMAL,
carbohydrate DECIMAL,
natrium DECIMAL,
potassium DECIMAL,
calcium DECIMAL,
magnesium DECIMAL,
phosphorus DECIMAL,
iron DECIMAL,
zinc DECIMAL,
copper DECIMAL,
manganese DECIMAL,
iodine DECIMAL,
selenium DECIMAL,
chrome DECIMAL,
molybdenum DECIMAL,
vitamin_a DECIMAL,
vitamin_d DECIMAL,
vitamin_e DECIMAL,
vitamin_k DECIMAL,
vitamin_b1 DECIMAL,
vitamin_b2 DECIMAL,
niacin DECIMAL,
vitamin_b6 DECIMAL,
vitamin_b12 DECIMAL,
folic_acid DECIMAL,
pantothenic_acid DECIMAL,
biotin DECIMAL,
vitamin_c DECIMAL,
sodium_content DECIMAL,
other VARCHAR(255),
  PRIMARY KEY(id)
);
\copy foods (id, food_group, food_name, energy, moisture, protein, lipid, food_fiber, carbohydrate, natrium, potassium, calcium, magnesium, phosphorus, iron, zinc, copper, manganese, iodine, selenium, chrome, molybdenum, vitamin_a, vitamin_d, vitamin_e, vitamin_k, vitamin_b1, vitamin_b2, niacin, vitamin_b6, vitamin_b12, folic_acid, pantothenic_acid, biotin, vitamin_c, sodium_content, other) FROM 'C:\Users\0203_PyJava\workspace\balanceChecker\food_data_0410.csv' WITH (FORMAT csv, HEADER false, DELIMITER ',', QUOTE '"', NULL '',  ENCODING 'UTF8');


CREATE TABLE food_name (
id SERIAL,
food_group INTEGER, 
food_name VARCHAR(255) NOT NULL,
other VARCHAR(255),
  PRIMARY KEY(id)
);

\copy food_name (id, food_group, food_name, other) FROM 'C:\Users\0203_PyJava\workspace\balanceChecker\food_name_data_0415.csv' WITH (FORMAT csv, HEADER false, DELIMITER ',', QUOTE '"', NULL '',  ENCODING 'UTF8');

メモ
バックエンド：JAVA（サーブレット）

フロントエンド
非同期処理:Vue.js（CDN？）
デザイン・CSS：Vuetify（CDN?）
https://vuetifyjs.com/ja/getting-started/installation/#cdn30924f7f304658345408
関数ライブラリ？：VueUse 
マウスポインタの位置情報などを取得できる？追加アニメーションに実装などが簡単かも

4/12
ログイン機能周りは実装済、BaseDAOは家の環境だと少し違う点に注意
jsフォルダ及びapp.js追加
homeにCDN追加
FoodDTO/DAO作成
logincontroller変更予定
・domain Foods作成予定？
・service 作成予定？使用用途を確認する
役割分担を考える
homeにindexを挿入する形でもいいかも
JavaScriptを用いればPOSTでもブックマークできるかも。URLいじる？


4/13
loginController変更
FoodApiController作成
HomeController作成
DAO/DTO/Domain変更
FoodGetService変更

home.jsp変更
lib内に「gson-2.10.1.jar」配置、プロジェクトにビルド
でデータベースの情報をフロントへ送るまでは作成、現在HOMEは見本
残り作業はほぼフロントとデザイン、JSONの取り出しと使用方法を確認すること
http://localhost:8080/balanceChecker/api/addFoodToSelectionへ接続すると送られたJSON構造が見れる
https://wand.witchserver.jp/archives/46
htmlファイルを分け、それぞれ部品として作成したほうが見やすいかも
即時検索は「インクリメンタルサーチ」https://qiita.com/taddy_korokoro/items/f1a9726f241bb027f0e9

4/14
JSONの構造は以下（http://localhost:8080/balanceChecker/api/foods）と同じ
[{"id":1,"food_group":1,"foodName":"こめ　［うるち米製品］　水稲全かゆ　レトルト　精白米","other":"食塩無添加品食物繊維：AOAC2011.25法","energy":37.0,"moisture":90.7,"protein":0.6,"lipid":0.1,"food_fiber":0.5,"carbohydrate":8.6,"natrium":1.0,"potassium":6.0,"calcium":2.0,"magnesium":2.0,"phosphorus":7.0,"iron":0.1,"zinc":0.1,"copper":0.01,"manganese":0.06,"iodine":0.0,"selenium":0.0,"chrome":0.0,"molybdenum":6.0,"vitamin_a":0.0,"vitamin_d":0.0,"vitamin_e":0.0,"vitamin_k":0.0,"vitamin_b1":0.0,"vitamin_b2":0.0,"niacin":0.0,"vitamin_b6":0.0,"vitamin_b12":0.0,"folic_acid":0.0,"pantothenic_acid":0.03,"biotin":0.1,"vitamin_c":0.0,"sodium_content":0.0},
 {"id":2,"food_group":1,"foodName":"こめ　［水稲めし］　精白米　うるち米","other":"精白米47 g相当量を含む食物繊維：AOAC2011.25法","energy":156.0,"moisture":60.0,"protein":2.5,"lipid":0.3,"food_fiber":1.5,"carbohydrate":37.1,"natrium":1.0,"potassium":29.0,"calcium":3.0,"magnesium":7.0,"phosphorus":34.0,"iron":0.1,"zinc":0.6,"copper":0.1,"manganese":0.35,"iodine":0.0,"selenium":1.0,"chrome":0.0,"molybdenum":30.0,"vitamin_a":0.0,"vitamin_d":0.0,"vitamin_e":0.0,"vitamin_k":0.0,"vitamin_b1":0.02,"vitamin_b2":0.01,"niacin":0.2,"vitamin_b6":0.02,"vitamin_b12":0.0,"folic_acid":3.0,"pantothenic_acid":0.25,"biotin":0.5,"vitamin_c":0.0,"sodium_content":0.0},
定数をJSON形式で渡したい

ファイルを分けたい、静的部分はJSP、動的部分はjs?
js（Vue）コンポーネント（部品）で分ける

ヘッダー
・header.jsp

メインアプリケーション
・mainApp.jsp
・mainApp.js

定数情報(基準値や単位など？)
・constants.js

食品情報API取得
・foodApi.js

食品名検索機能
・foodNameSearch.js

検索食品表示ページ
・foodNameSearch.jsp？よくわからないのでとりあえずhomeに書いて後で分割

栄養素別検索
・searchByNutrient.js

合計栄養素表示
・totalNutrientDisplay.js

yahooのコンテンツ幅990px
検索機能の動作が重いかもしれない、マシン（メモリ）依存？毎回SQLでDBから持ってきたほうが早い可能性
検索機能用のJSON（id,foodName,other）を取得したほうがメモリ節約？
左のカードはタブで切り替える？https://www.aura-office.co.jp/blog/tab_menu_coding/

4/15
デザインを決める、左右で分ける？
レイアウト手法を考える、Grid LayoutやFlexBox
右は固定、左を検索ウィンドウ表示？https://qiita.com/umaxiaotian/items/582fb0a06ce3d4f3b164
モーダルウィンドウでもいい、https://v2.vuetifyjs.com/ja/components/dialogs/#section-4f7f304465b9
検索専用DBを作成する？{id, food_group, food_name, other}、メモリの節約、約47％削減
検索後、選択した食品はマスターから持ってくる、1つしか選択しないため早い
検索機能を毎回サーバーサイドでSQLを行う方式へ変更、速度100倍くらい

4/16
ボタンを押してモーダルウィンドウ起動へ変更（step4）
栄養素別食品表示、必要な情報は{id, food_group, food_name, moisture, 各栄養素, other}
各栄養素別にDBを作るのは大変すぎる、持ってくる時に必要な情報だけ持ってくる
モーダルウィンドウを全画面にして、２グループずつ２列で表示
栄養素の選択モーダルウィンドウ仮作成、値送信ししていない、記述増やすとモーダルウィンドウ起動しない？
バックエンドは仮作成

4/17
栄養素別検索のリスト表示がうまくいかない、データの受信はできている。
リスト表示と、デバッグ用のテキストカードが生成されていない。
生成条件のIF文がうまくいっていないかもしれないが、テキストカード外ではまったく同じコードで生成される。
IF文実行時に空のまま（値の変更が反映されていない）か、そもそものモーダルウィンドウの構造がうまくできていない。
構造の問題かも
解決！構造の問題だった、閉じタグが記述されていなかった、チャットGPTでも検出できない時があるらしい

4/21
食品追加機能及び、グラム数入力による栄養素再計算機能実装済み、属性を追加しそれを変更する形。あとは計算と結果表示
グラム入力欄にマイナスと小数を許容してしまっている、余裕があったら修正
あとは再計算した栄養素を表示する、上限や割合、パーソナルデータ入力およびそれに基づいた再計算機能の実装
栄養素別検索のグループ分けと表示、水分量の切り替えラジオボタン
食品の左側に食品群別でアイコンを表示
・パーソナルデータ入力機能及びその保持（栄養素上限や割合に必要）
年齢
性別
身長
体重
運動量
テキストボックスを追加したら表示されない、要修正
修正、変数の変化も確認
リキッドデザインを採用したい、画面幅によって幅が変わる、1920だと1480位（Amazon）
home.jspのコードを見やすくレスポンシブに仮実装した
TDEEの計算及び表示が終わった

4/22
基準値の算出が終わった

4/23
栄養素別検索のグループ分け未実装
食品充足率表示バーほぼ実装、耐容上限要確認、単位未実装
削除ボタン実装
充足バー表示完成
スクロール機能仮実装、画面の高さ合わせられていない
css変更あり
ヘッダー変更あり

4/24
栄養素別検索のグループ別スクロールウィンドウを作成したい
　グループ別（１８種類）にリスト分けし、それを出力する？
　水分量40以下も表示、というラジオボタン用に分岐？
　　もし水分量判断変数がtrueでなかったら、リスト表示時に40パーセント以下食品を表示する
栄養素別スクロール実装済み
　とても重い、おそらく描画に時間がかかっているためページネーション機能を実装したい
フレックスボックスにする、上下左右のdivすべてをcol内に、gpt参照
